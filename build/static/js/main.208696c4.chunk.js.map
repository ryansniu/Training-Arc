{"version":3,"sources":["components/navbar/index.jsx","components/inputform/index.jsx","components/quiz/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","style","textDecoration","color","InputForm","nameEl","React","useRef","query","topic","numpods","arr","useState","queries","setQueries","topics","setTopics","useEffect","onSubmit","e","preventDefault","fetch","method","cache","headers","body","JSON","stringify","current","value","then","res","json","data","push","i","j","pod","numSubpods","k","t","length","type","name","ref","map","index","newText","split","str","Quiz","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","answerOption","onClick","nextQuestion","handleAnswerOptionClick","App","path","component","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.208696c4.chunk.js","sourcesContent":["import './style.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n      <div className=\"navbar\">\r\n        <p className=\"navbar-component\">\r\n            <Link to=\"/input-form\" style={{ textDecoration: 'none', color: \"#F6DD90\" }}>Word Problem Solver</Link>\r\n        </p>\r\n        <p className=\"navbar-component\">\r\n            <Link to=\"/take-quiz\" style={{ textDecoration: 'none', color: \"#F6DD90\" }}>Take Quiz</Link>\r\n        </p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, {useState, useEffect} from 'react';\r\nimport './style.css';\r\n\r\nfunction InputForm() {\r\n    const nameEl = React.useRef(null);\r\n    var query = {};\r\n    var topic = [];\r\n    let numpods = 0;\r\n    let arr = [];\r\n    const [queries, setQueries] = useState([]);\r\n    const [topics, setTopics] = useState([]);\r\n\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      fetch('/wolfram', {\r\n            method: \"POST\",\r\n            cache: \"no-cache\",\r\n            headers:{\r\n                \"content_type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify(nameEl.current.value)\r\n        }\r\n      ).then(res => res.json()).then(data => {\r\n        // alert(JSON.stringify(data));\r\n        if (data[\"queryresult\"][\"success\"] === false) {\r\n            arr.push(\"Can't solve word problem. Try another problem!\");\r\n        }\r\n        else {\r\n            query = data[\"queryresult\"];\r\n            numpods = query[\"numpods\"];\r\n            var i;\r\n            for (i = 0; i < numpods; i++) {\r\n                var pod = query[\"pods\"][i];\r\n                let numSubpods = pod[\"numsubpods\"];\r\n                var j;\r\n                for (j = 0; j < numSubpods; j++) {\r\n                    arr.push(JSON.stringify(pod[\"subpods\"][j][\"plaintext\"]));\r\n                }\r\n            }\r\n            let t = data[\"topics\"];\r\n            var k;\r\n            for (k = 0; k < t.length; k++) {\r\n                topic.push(JSON.stringify(t[k]));\r\n            }\r\n        }\r\n        setQueries(arr);\r\n        setTopics(topic);\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n        //alert(queries);\r\n    }, [queries])\r\n\r\n    return (\r\n        <div className=\"input-form\">\r\n        <form onSubmit={handleSubmit}>\r\n            <label className=\"textbox-label\">\r\n                Put word problem here:\r\n                <input className=\"input-component\" type=\"text\" name=\"problem\" ref={nameEl} />\r\n            </label>\r\n            <input className=\"submit\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        {queries.map((value, index) => {\r\n            let newText = value.split('\\\\n').map(str => {\r\n                return <p className=\"queries\">{str}</p>\r\n            });\r\n            return <div>{newText}<br /></div>;\r\n        })}\r\n        {topics.map((value, index) => {\r\n            return <p className=\"topics\">{value}</p>;\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputForm;","import './style.css';\r\nimport React, { useState } from 'react';\r\nimport {withRouter} from 'react-router';\r\n\r\nfunction Quiz() {\r\n  const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect) => {\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{showScore ? (\r\n\t\t\t\t<div className='score-section'>\r\n\t\t\t\t\tYou scored {score} out of {questions.length}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\r\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Quiz;","import './App.css';\r\nimport Navbar from './components/navbar';\r\nimport InputForm from './components/inputform';\r\nimport Quiz from './components/quiz';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path=\"/input-form\" component={withRouter(InputForm)}></Route>\r\n        <Route path=\"/take-quiz\" component={withRouter(Quiz)}></Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}